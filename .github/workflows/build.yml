name: Build

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build Server
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Nodejs Packages
      run: cd ui && npm install
    - name: Build UI
      run: cd ui && npm run build
    - name: Build the Docker Image
      run: docker build . --tag crypto-collector
    - name: Build and push Docker images
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: harryoh/crypto-collector
        tag_with_sha: true
        tags: latest
    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          security unlock-keychain -p ${{ secrets.PASSWORD }} && \
          export PATH="$PATH:/usr/local/bin" && \
          cd ~/Work/crypto-collector && \
          git pull --ff-only && \
          docker-compose pull && \
          docker-compose down && \
          rm -rf .env && \
          echo UpbitPeriodSeconds=${{ secrets.UPBIT_PERIOD_SECONDS }} >> .env && \
          echo BithumbPeriodSeconds=${{ secrets.BITHUMB_PERIOD_SECONDS }} >> .env && \
          echo BybitPeriodSeconds=${{ secrets.BYBIT_PERIOD_SECONDS }} >> .env && \
          echo UsdKrwPeriodSeconds=${{ secrets.USDKRW_PERIOD_SECONDS }} >> .env && \
          echo MessagePeriodSeconds=${{ secrets.MESSAGE_PERIOD_SECONDS }} >> .env && \
          echo AlarmChatID=${{ secrets.ALARM_CHATID }} >> .env && \
          echo AlarmToken=${{ secrets.ALARM_TOKEN }} >> .env && \
          echo MonitorChatID=${{ secrets.MONITOR_CHATID }} >> .env && \
          echo MonitorToken=${{ secrets.MONITOR_TOKEN }} >> .env && \
          echo RulePlusMax=${{ secrets.RULE_PLUS_MAX }} >> .env && \
          echo RulePlusMin=${{ secrets.RULE_PLUS_MIN }} >> .env && \
          echo RuleMinusMax=${{ secrets.RULE_MINUS_MAX }} >> .env && \
          echo RuleMinusMin=${{ secrets.RULE_MINUS_MIN }} >> .env && \
          echo CurrencyApiKey=${{ secrets.CURRENCY_API_KEY }} >> .env && \
          docker-compose up -d
